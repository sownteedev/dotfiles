#!/usr/bin/env bash
cd ~

setup_dotfiles() {
    # Font
    echo "[*] Installing fonts..."
    sudo pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji --noconfirm && yay -S apple-fonts ttf-ms-win11-auto ttf-ms-win11-auto-korean ttf-ms-win11-auto-zh_cn --noconfirm
    echo "[*] Copy fonts ..."
    ln -s ~/Dotfiles/dotf/.fonts ~/.fonts
    fc-cache -fv
    echo "[*] Done."
    sleep 3 && clear

    # Icon theme & Cursor theme
    echo "[*] Copy icons ..."
    ln -s ~/Dotfiles/dotf/.icons ~/.icons
    echo "[*] Done."
    sleep 3 && clear

    # Themes
    echo "[*] Copy themes ..."
    ln -s ~/Dotfiles/dotf/.themes ~/.themes
    echo "[*] Done."
    sleep 3 && clear

    # Config
    echo "[*] Copy config ..."
    if ! [ -d $HOME/.config ]; then
        mkdir -p $HOME/.config
    fi
    ln -s ~/Dotfiles/dotf/.config/zsh ~/.config/zsh
    ln -s ~/Dotfiles/dotf/.config/fontconfig ~/.config/fontconfig
    ln -s ~/Dotfiles/dotf/.config/gtk-3.0 ~/.config/gtk-3.0
    ln -s ~/Dotfiles/dotf/.config/gtk-4.0 ~/.config/gtk-4.0
    echo "[*] Done."
    sleep 3 && clear

    # Local
    echo "[*] Copy local ..."
    if ! [ -d $HOME/.local ]; then
        mkdir -p $HOME/.local
    fi
    mkdir -p ~/.local/share/applications
    ln -s ~/Dotfiles/dotf/.local/bin ~/.local/bin
	ln -s ~/Dotfiles/dotf/.local/share/blackbox ~/.local/share
    echo "[*] Done."
    sleep 3 && clear

    # .gtkrc-2.0
    echo "[*] Copy .gtkrc-2.0 ..."
    rm -f ~/.gtkrc-2.0 && ln -s ~/Dotfiles/dotf/.gtkrc-2.0 ~/.gtkrc-2.0
    echo "[*] Done."
    sleep 3 && clear
    cd ~
}

setup_env() {
    read -p "[*] Do you want to use my WM configs? ( 1 for X / 2 for W ): " choice
    if [ "$choice" = "1" ]; then
        sudo pacman -S --noconfirm xorg xorg-xinit redshift maim xsettingsd arandr xss-lock gpick
        yay -S --noconfirm picom-git
        clear

        echo "[*] Enable touchpad for laptop and set time to sleep ..."
        yay -S xf86-input-libinput xf86-input-synaptics libinput-gestures xdotool wmctrl --noconfirm
        sudo rm -rf /etc/X11/xorg.conf.d
        sudo ln -s ~/Dotfiles/dotf/.root/xorg.conf.d /etc/X11/xorg.conf.d
		ln -s ~/Dotfiles/dotf/.config/libinput-gestures.conf ~/.config/libinput-gestures.conf
        sudo gpasswd -a $USER input
        libinput-gestures-setup stop desktop autostart start
        sleep 3 && clear
		
		echo "[*] Copy .Xresources ..."
		rm -f ~/.Xresources && ln -s ~/Dotfiles/dotf/.Xresources ~/.Xresources
		echo "[*] Done."
		sleep 3 && clear

        echo "[*] Override .xinitrc ..."
        rm -f ~/.xinitrc && ln -s ~/Dotfiles/dotf/.xinitrc ~/.xinitrc
        echo "[*] Done"
        sleep 3 && clear

        echo "[*] Install ibus"
        yay -S ibus ibus-bamboo --noconfirm
        env DCONF_PROFILE=ibus dconf write /desktop/ibus/general/preload-engines "['xkb:us::eng', 'Bamboo']" && gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'us'), ('ibus', 'Bamboo')]"
        mkdir ibus-bamboo && cd ibus-bamboo
        wget "https://raw.githubusercontent.com/BambooEngine/ibus-bamboo/master/archlinux/PKGBUILD-$VER" -O PKGBUILD
        makepkg -si
        cd .. && rm -rf ibus-bamboo

		echo "[*] Installing AwesomeWM ..."
		yay -S awesome-luajit-git lua-pam-git --noconfirm
        rm -rf ~/.config/awesome
		clear
        read -p "[*] What version AwesomeWM? ( 1 for default / 2 for mAWMcos ): " choice
        if [ "$choice" = "1" ]; then
            echo "[*] Installing Default ..."
            git clone https://github.com/sownteedev/dotfiles.git --depth=1 --branch=awesome ~/Dotfiles/awesome
            ln -s ~/Dotfiles/awesome ~/.config/awesome
            echo "[*] Done."
        else
            echo "[*] Installing mAWMcos ..."
            git clone https://github.com/sownteedev/dotfiles.git --depth=1 --branch=mAWMcos ~/Dotfiles/mAWMcos
            ln -s ~/Dotfiles/mAWMcos ~/.config/awesome
            echo "[*] Done."
        fi
    elif [ "$choice" = "2" ]; then
        echo "[*] Installing Niri ..."
        yay -S niri xwayland-satellite --noconfirm
		yay -S grim slurp gpu-screen-recorder wl-clipboard hyprpicker gammastep swayidle --noconfirm
        yay -S fcitx5 fcitx5-bamboo fcitx5-configtool fcitx5-gtk --noconfirm
        rm -rf ~/.config/niri
        ln -s ~/Dotfiles/dotf/.config/niri ~/.config/niri
		echo "[*] Installing Ags/Astal ..."
		yay -S libastal-meta aylurs-gtk-shell-git --noconfirm
		git clone https://github.com/sownteedev/dotfiles.git --depth=1 --branch=ags/astal ~/Dotfiles/ags
		ln -s ~/Dotfiles/ags ~/.config/ags
        echo "[*] Done."
    else
		echo "[*] Installing Gnome ..."
		yay -S gnome --noconfirm
		yay -S gnome-tweaks extension-manager --noconfirm
		gsettings set org.gnome.desktop.wm.preferences resize-with-right-button true
		gsettings set org.gnome.desktop.wm.preferences button-layout ':minimize,maximize,close'
		gsettings set org.gnome.desktop.interface gtk-theme phocus
		gsettings set org.gnome.desktop.interface icon-theme WhiteSur
		gsettings set org.gnome.desktop.interface cursor-theme Dark_Cursor
    fi
    cd ~
    sleep 3 && clear
}

install_workspace() {
    echo "[*] Installing Spotify and Youtube Music ..."
    yay -S spotify --noconfirm
    yay -S spicetify-cli-git --noconfirm
    yay -S youtube-music --noconfirm
    spotify &
    sleep 5 && killall spotify
    sudo chmod a+wr /opt/spotify
    sudo chmod a+wr /opt/spotify/Apps -R
    mkdir -p ~/.config/spicetify/Themes
    ln -s ~/Dotfiles/dotf/.config/spicetify/Themes/Comfy ~/.config/spicetify/Themes/Comfy
    spicetify config current_theme Comfy color_scheme Lunar inject_css 1 replace_colors 1 overwrite_assets 1 inject_theme_js 1
    spicetify apply
    echo "[*] Spotify and Youtube Music setup done."
    sleep 3 && clear

    echo "[*] Installing Zen Browser ..."
    yay -S zen-browser-bin firefox-pwa --noconfirm
    xdg-settings set default-web-browser zen.desktop
    echo "[*] Zen Browser setup done."
    sleep 3 && clear

    echo "[*] Installing Grub Theme ..."
    read -p "[*] Type theme you want use: " THEME_NAME
    THEME_DIR="/usr/share/grub/themes"
    sudo ln -s ~/Dotfiles/dotf/.root/grub/themes/${THEME_NAME} ${THEME_DIR}/${THEME_NAME}
    sudo sed -i "s|#GRUB_THEME=.*|GRUB_THEME=${THEME_DIR}/${THEME_NAME}/theme.txt|g" /etc/default/grub
    sudo grub-mkconfig -o /boot/grub/grub.cfg
    echo "[*] Grub Theme setup done."
    sleep 3 && clear

    echo "[*] Installing Display Manager (ly)"
    echo "[*] Installing Ly ..."
    yay -S --noconfirm ly
	sudo rm -f /etc/ly/config.ini
    sudo ln -s ~/Dotfiles/dotf/.root/ly/config.ini /etc/ly/config.ini
	sudo systemctl enable ly
    echo "[*] Done."
    sleep 3 && clear

    echo "[*] Installing TeVim ..."
    yay -S --noconfirm lazygit xclip xsel fzf ripgrep neovim
    git clone https://github.com/sownteedev/TeVim.git --depth 1 ~/.config/nvim
    ln -s ~/Dotfiles/dotf/.config/nvim/lua/custom ~/.config/nvim/lua/custom
    echo "[*] TeVim setup done."
    sleep 3 && clear

    echo "[*] Installing Development Applications..."
    yay -S --noconfirm visual-studio-code-insiders-bin cursor-extracted jetbrains-toolbox docker docker-desktop postman-bin github-desktop-bin devtoys-bin blackbox-terminal
	rm ~/.config/systemd/user/graphical-session.target.wants/docker-desktop.service
    yay -S --noconfirm vmware-workstation open-vm-tools xf86-video-vmware xf86-input-vmmouse
    sudo systemctl enable vmware-networks vmware-usbarbitrator vmtoolsd

    echo "[*] Installing Other Applications..."
    yay -S --noconfirm vesktop-bin anydesk-bin telegram-desktop-bin cloudflare-warp-bin libreoffice-fresh

    sh -c "$(curl -sSL https://raw.githubusercontent.com/realdtn2/zalo-linux-unofficial/main/install_curl.sh)"

    echo "[*] Environment setup complete."
    sleep 3 && clear

    echo "[*] Installing Oh My Zsh ..."
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    echo "[*] Oh My Zsh installation done."
}


while [[ $# -gt 0 ]]; do
    case "$1" in
        --workspace)
			install_workspace
            exit 0
            ;;
        --env)
			setup_env
			exit 0
            ;;
        --dots)
			setup_dotfiles
			exit 0
            ;;
		--all)
			setup_dotfiles
			setup_env
			install_workspace
			exit 0
    esac
done
